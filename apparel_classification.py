# -*- coding: utf-8 -*-
"""Apparel Classification

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c0ZGuXWKhsURXlgiocRP8ydcf4c_To7-
"""

import tensorflow as tf
from tensorflow import keras
from keras.models import Sequential
from keras.layers import Activation
from keras.layers import Dense,Flatten

import numpy as np
import matplotlib.pyplot as plt

"""# Importing **fashionmnist** dataset"""

fashion_mnist=keras.datasets.fashion_mnist

(train_image, train_label),(test_image,test_label)=fashion_mnist.load_data()

"""# **AS images are not given any string type classes so we are storing the class names in a array**"""

class_names = ['t-shirt/top','Trouser', 'Pullover', 'Dress', 'Coat',
               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']

test_label

"""# Ploting the first image"""

plt.figure()
plt.imshow(train_image[0])
plt.colorbar()
#plt.grid(True)
plt.show()

"""# Normalizing the data before feeding the NNU"""

train_image = train_image / 255.0

test_image = test_image / 255.0

"""# Display the first 25 images from the training set and display the class name below each image"""

plt.figure(figsize=(10,10))

for i in range(25):
  plt.subplot(5,5,i+1)
  plt.xticks([])
  plt.yticks([])
  plt.imshow(train_image[i],cmap=plt.cm.binary)
  plt.xlabel(class_names[train_label[i]])
  
plt.show()

"""# Building model"""

model =Sequential()
model.add(Flatten(input_shape=(28, 28)))
model.add(Dense (128, activation='relu'))
model.add(Dense (10, activation='softmax'))


model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(train_image, train_label, epochs=5, verbose=2)

"""# Make prediction"""

predictions = model.predict(test_image)
predictions

"""# Model evaluation"""

class_predictions = model.predict_classes(test_image)

class_predictions

test_loss, test_acc = model.evaluate(test_image,test_label )

test_loss,test_acc